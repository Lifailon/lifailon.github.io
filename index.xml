<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PS-Commands</title>
    <link>https://lifailon.github.io/</link>
    <description>Recent content on PS-Commands</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Mar 2024 05:00:00 +0300</lastBuildDate>
    <atom:link href="https://lifailon.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub</title>
      <link>https://lifailon.github.io/github/</link>
      <pubDate>Thu, 14 Mar 2024 05:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/github/</guid>
      <description>Набор скриптов и модулей.&#xA;Тестовый стенд WinForms с примерами реализации большенства функционала. Работа с DataGridView, Button, Checkbox и т.п.&#xA;Автоматизация установки всех зависимостей для работы с Selenium и модули с примерами работ (SpeedTest и Translation) и бесплатными версиями ChatGPT через консоль для интеграции в код.&#xA;Другие модули и GUI приложения в репозитории на GitHub.</description>
    </item>
    <item>
      <title>PowerShell</title>
      <link>https://lifailon.github.io/powershell/</link>
      <pubDate>Thu, 14 Mar 2024 04:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/powershell/</guid>
      <description>Help Get-Verb действия/глаголы, утвержденные для использования в командлетах Get-Command *Language* поиск команды по имени (Get-Command Get-Language).Module узнать к какому модулю принадлежит команда Get-Command Get-Content | fl Module,DLL узнать принадлежность команды к модулю и dll Get-Command -Module LanguagePackManagement отобразить список команд указанного модуля (Get-Module LanguagePackManagement).ExportedCommands.Values отобразить список команд указанного модуля Get-Language | Get-Member отобразить список методов команды (действия), объекты вывода и Event (события объектов: Click) (Get-Help Get-Service).Aliases узнать псевдонимом команды Get-Alias gsv узнать имя команды по псевдониму Get-Help Get-Service синтаксис Get-Help Get-Service -Parameter * описание всех параметров Get-Help Get-Service -Online Get-Help Get-Service -ShowWindow описание параметров в GUI с фильтрацией Show-Command вывести список команд в GUI Show-Command Get-Service список параметров команды в GUI Invoke-Expression iex принимает текст для выполнения в консоли как команды $PSVersionTable версия PowerShell Set-ExecutionPolicy Unrestricted Get-ExecutionPolicy $Metadata = New-Object System.</description>
    </item>
    <item>
      <title>.NET</title>
      <link>https://lifailon.github.io/dotnet/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/dotnet/</guid>
      <description>Object and Method EventLog [System.Diagnostics.EventLog] | select Assembly,Module $EventLog = [System.Diagnostics.EventLog]::new(&amp;quot;Application&amp;quot;) $EventLog = New-Object -TypeName System.Diagnostics.EventLog -ArgumentList Application,192.168.3.100 $EventLog | Get-Member -MemberType Method $EventLog.MaximumKilobytes максимальный размер журнала $EventLog.Entries просмотреть журнал $EventLog.Clear() очистить журнал&#xA;IO.Path Join-Path C: Install Test [System.IO.Path]::Combine(&amp;quot;C:&amp;quot;, &amp;quot;Install&amp;quot;, &amp;quot;Test&amp;quot;)&#xA;Match [System.Math] | Get-Member -Static -MemberType Methods [System.Math]::Max(2,7) [System.Math]::Min(2,7) [System.Math]::Floor(3.9) [System.Math]::Truncate(3.9)&#xA;GeneratePassword Add-Type -AssemblyName System.Web [System.Web.Security.Membership]::GeneratePassword(10,2)&#xA;SoundPlayer $CriticalSound = New-Object System.Media.SoundPlayer $CriticalSound.SoundLocation = &amp;#34;C:\WINDOWS\Media\Windows Critical Stop.wav&amp;#34; $CriticalSound.Play() $GoodSound = New-Object System.</description>
    </item>
    <item>
      <title>Active Directory</title>
      <link>https://lifailon.github.io/activedirectory/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/activedirectory/</guid>
      <description>Active Directory RSAT (Remote Server Administration Tools) DISM.exe /Online /add-capability /CapabilityName:Rsat.ActiveDirectory.DS-LDS.Tools~~~~0.0.1.0 /CapabilityName:Rsat.GroupPolicy.Management.Tools~~~~0.0.1.0 Add-WindowsCapability –online –Name Rsat.Dns.Tools~~~~0.0.1.0 Add-WindowsCapability -Online -Name Rsat.DHCP.Tools~~~~0.0.1.0 Add-WindowsCapability –online –Name Rsat.FileServices.Tools~~~~0.0.1.0 Add-WindowsCapability -Online -Name Rsat.WSUS.Tools~~~~0.0.1.0 Add-WindowsCapability -Online -Name Rsat.CertificateServices.Tools~~~~0.0.1.0 Add-WindowsCapability -Online -Name Rsat.RemoteDesktop.Services.Tools~~~~0.0.1.0 Get-WindowsCapability -Name RSAT* -Online | Select-Object -Property DisplayName, State отобразить список установленных компанентов&#xA;Import-Module ActiveDirectory $Session = New-PSSession -ComputerName $srv -Credential $cred\&#xD;Export-PSsession -Session $Session -Module ActiveDirectory -OutputModule ActiveDirectoryэкспортировать модуль из удаленной сесси (например, с DC) \&#xD;Remove-PSSession -Session $Session\&#xD;Import-Module ActiveDirectory\&#xD;Get-Command -Module ActiveDirectory`</description>
    </item>
    <item>
      <title>Ansible</title>
      <link>https://lifailon.github.io/ansible/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/ansible/</guid>
      <description>apt -y update &amp;amp;&amp;amp; apt -y upgrade apt -y install ansible v2.10.8 apt -y install ansible-core v2.12.0 apt -y install sshpass&#xA;ansible-galaxy collection install ansible.windows установить коллекцию модулей ansible-galaxy collection install community.windows ansible-galaxy collection list | grep windows ansible-config dump | grep DEFAULT_MODULE_PATH путь хранения модулей&#xA;apt-get -y install python-dev libkrb5-dev krb5-user пакеты для Kerberos аутентификации apt install python3-pip pip3 install requests-kerberos nano /etc/krb5.conf настроить [realms] и [domain_realm] kinit -C support4@domail.</description>
    </item>
    <item>
      <title>API</title>
      <link>https://lifailon.github.io/api/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/api/</guid>
      <description>REST API $url = &amp;quot;https://habr.com/ru/rss/users/Lifailon/publications/articles/?fl=ru&amp;quot; RSS лента публикаций на Habr Invoke-RestMethod $url $iwr = Invoke-WebRequest -Uri $url $iwr | Get-Member $iwr.Content $iwr.StatusCode -eq 200 $iwr.Headers $iwr.ParsedHtml | Select lastModified $iwr.Links | fl title,innerText,href $iwr.Images.src&#xA;Methods GET - Read POST - Create PATCH - Partial update/modify PUT - Update/replace DELETE - Remove&#xA;Download Image function Download-Image { param ( [Parameter(Mandatory = $True)]$url ) $folder = $url -replace &amp;#34;http.+://&amp;#34; -replace &amp;#34;/&amp;#34;,&amp;#34;-&amp;#34; -replace &amp;#34;-$&amp;#34; $path = &amp;#34;$home\Pictures\$folder&amp;#34; if (Test-Path $path) { Remove-Item $path -Recurse -Force New-Item -ItemType Directory $path &amp;gt; $null } else { New-Item -ItemType Directory $path &amp;gt; $null } $irm = Invoke-WebRequest -Uri $url foreach ($img in $irm.</description>
    </item>
    <item>
      <title>Apps</title>
      <link>https://lifailon.github.io/apps/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/apps/</guid>
      <description>Pandoc $release_latest = Invoke-RestMethod &amp;#34;https://api.github.com/repos/jgm/pandoc/releases/latest&amp;#34; $url = $($release_latest.assets | Where-Object name -match &amp;#34;windows-x86_64.zip&amp;#34;).browser_download_url Invoke-RestMethod $url -OutFile $home\Downloads\pandoc.zip Expand-Archive -Path &amp;#34;$home\Downloads\pandoc.zip&amp;#34; -DestinationPath &amp;#34;$home\Downloads\&amp;#34; $path = $(Get-ChildItem &amp;#34;$home\Downloads\pandoc-*\*.exe&amp;#34;).FullName Copy-Item -Path $path -Destination &amp;#34;C:\Windows\System32\pandoc.exe&amp;#34; Remove-Item &amp;#34;$home\Downloads\pandoc*&amp;#34; -Force -Recurse&#xD;pandoc -s README.md -o index.html конвертация из Markdown в HTML pandoc README.md -o index.html --css=styles.css применить стили из css pandoc -s index.html -o README.md конвертация из HTML в Markdown pandoc -s README.md -o README.docx конвертация в Word pandoc -s README.</description>
    </item>
    <item>
      <title>Component Object Model</title>
      <link>https://lifailon.github.io/com/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/com/</guid>
      <description>IE $ie.document.IHTMLDocument3_getElementsByTagName(&amp;quot;input&amp;quot;) | select name получить имена всех Input Box $ie.document.IHTMLDocument3_getElementsByTagName(&amp;quot;button&amp;quot;) | select innerText получить имена всех Button $ie.Document.documentElement.innerHTML прочитать сырой Web Content (&amp;lt;input name=&amp;ldquo;login&amp;rdquo; tabindex=&amp;ldquo;100&amp;rdquo; class=&amp;ldquo;input__control input__input&amp;rdquo; id=&amp;ldquo;uniq32005644019429136&amp;rdquo; spellcheck=&amp;ldquo;false&amp;rdquo; placeholder=&amp;ldquo;Логин&amp;rdquo;) $All_Elements = $ie.document.IHTMLDocument3_getElementsByTagName(&amp;quot;*&amp;quot;) забрать все элементы $Go_Button = $All_Elements | ? innerText -like &amp;quot;go&amp;quot; поиск элемента по имени $Go_Button | select ie9_tagName получить TagName (SPAN) для быстрого дальнейшего поиска $SPAN_Elements = $ie.document.IHTMLDocument3_getElementsByTagName(&amp;quot;SPAN&amp;quot;)&#xA;$ie = New-Object -ComObject InternetExplorer.Application $ie.navigate(&amp;#34;https://yandex.ru&amp;#34;) $ie.visible = $true $ie.</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://lifailon.github.io/git/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/git/</guid>
      <description>Git git --version git config --global user.name &amp;quot;Lifailon&amp;quot; добавить имя для коммитов git config --global user.email &amp;quot;lifailon@yandex.ru&amp;quot; git config --global --edit ssh-keygen -t rsa -b 4096 Get-Service | where name -match &amp;quot;ssh-agent&amp;quot; | Set-Service -StartupType Automatic Get-Service | where name -match &amp;quot;ssh-agent&amp;quot; | Start-Service Get-Service | where name -match &amp;quot;ssh-agent&amp;quot; | select Name,Status,StartType ssh-agent ssh-add C:\Users\Lifailon\.ssh\id_rsa cat ~\.ssh\id_rsa.pub | Set-Clipboard copy to settings keys cd $home\Documents\Git git clone git@github.com:Lifailon/lifailon.github.io cd lifailon.</description>
    </item>
    <item>
      <title>HTML</title>
      <link>https://lifailon.github.io/html/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/html/</guid>
      <description>HTML ConvertFrom-Html function ConvertFrom-Html { param ( [Parameter(ValueFromPipeline)]$url ) $irm = Invoke-RestMethod $url $HTMLFile = New-Object -ComObject HTMLFile $Bytes = [System.Text.Encoding]::Unicode.GetBytes($irm) $HTMLFile.write($Bytes) ($HTMLFile.all | where {$_.tagname -eq &amp;#34;body&amp;#34;}).innerText } $apache_status = &amp;#34;http://192.168.3.102/server-status&amp;#34; $apache_status | ConvertFrom-Html&#xD;ConvertTo-Html Get-Process | select Name, CPU | ConvertTo-Html -As Table &amp;gt; &amp;quot;$home\desktop\proc-table.html&amp;quot; вывод в формате List (Format-List) или Table (Format-Table)&#xA;$servers = &amp;#34;ya.ru&amp;#34;,&amp;#34;ya.com&amp;#34;,&amp;#34;google.com&amp;#34; $path = &amp;#34;$home\Desktop\Ping.html&amp;#34; $header = @&amp;#34; &amp;lt;!DOCTYPE html PUBLIC &amp;#34;-//W3C//DTD XHTML 1.0 Strict//EN&amp;#34; &amp;#34;http://www.</description>
    </item>
    <item>
      <title>InfluxDB</title>
      <link>https://lifailon.github.io/influxdb/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/influxdb/</guid>
      <description>Install Windows Download InfluxDB 1.x Open Source&#xA;InfluxDB-Studio&#xA;Invoke-RestMethod &amp;#34;https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10_windows_amd64.zip&amp;#34; -OutFile &amp;#34;$home\Downloads\influxdb-1.8.10_windows_amd64.zip&amp;#34; Expand-Archive &amp;#34;$home\Downloads\influxdb-1.8.10_windows_amd64.zip&amp;#34; -DestinationPath &amp;#34;$home\Documents\&amp;#34; Remove-Item &amp;#34;$home\Downloads\influxdb-1.8.10_windows_amd64.zip&amp;#34; &amp;amp; &amp;#34;$home\Downloads\influxdb-1.8.10-1\influxd.exe&amp;#34;&#xD;Install Ubuntu wget https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb sudo dpkg -i influxdb_1.8.10_amd64.deb systemctl start influxdb systemctl status influxdb ps aux | grep influxdb | grep -Ev &amp;#34;grep&amp;#34; netstat -natpl | grep 80[8-9][3-9]&#xD;API nano /etc/influxdb/influxdb.conf [http] enabled = true bind-address = &amp;#34;:8086&amp;#34; auth-enabled = false systemctl restart influxdb&#xD;Chronograf wget https://dl.influxdata.com/chronograf/releases/chronograf-1.10.2_windows_amd64.zip -UseBasicParsing -OutFile chronograf-1.10.2_windows_amd64.zip&#xD;Expand-Archive .</description>
    </item>
    <item>
      <title>MS Exchange</title>
      <link>https://lifailon.github.io/exchange/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/exchange/</guid>
      <description>PSSession $srv_cas = &amp;quot;exchange-cas&amp;quot; $session_exchange = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://$srv_cas/PowerShell/ -Credential $Cred -Authentication Kerberos Get-PSSession Import-PSSession $session_exchange -DisableNameChecking импортировать в текущую сессию&#xA;Get-ExchangeServer | select name,serverrole,admindisplayversion,Edition,OriginatingServer,WhenCreated,WhenChanged,DataPath | ft список всех серверов&#xA;Settings Get-ImapSettings настройки IMAP Get-ExchangeCertificate список сертификатов Get-ExchangeCertificate -Thumbprint &amp;quot;5CEC8544D4743BC279E5FEA1679F79F5BD0C2B3A&amp;quot; | Enable-ExchangeCertificate -Services IMAP, POP, IIS, SMTP iisreset Get-ClientAccessService | fl identity, *uri* настройки службы автообнаружения в Exchange 2016 Get-ClientAccessService -Identity $srv | Set-ClientAccessService -AutoDiscoverServiceInternalUri https://mail.domain.ru/Autodiscover/Autodiscover.xml изменить на внешний адрес Get-OutlookAnywhere OA позволяет клиентам Outlook подключаться к своим почтовым ящикам за пределами локальной сети (без использования VPN) Get-WebServicesVirtualDirectory Get-OwaVirtualDirectory Get-ActiveSyncVirtualDirectory Get-OabVirtualDirectory виртуальная директория автономной адресной книги Get-OabVirtualDirectory -Server $srv | Set-OabVirtualDirectory -InternalUrl &amp;quot;https://mail.</description>
    </item>
    <item>
      <title>MS SQL</title>
      <link>https://lifailon.github.io/mssql/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/mssql/</guid>
      <description>Express wget -qO- https://packages.microsoft.com/keys/microsoft.asc | apt-key add - импортировать GPG-ключ для репозитория https://packages.microsoft.com/config/ubuntu/ выбрать репозиторий и скопировать URL add-apt-repository &amp;quot;$(wget -qO- https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list)&amp;quot; apt-get update обновить список пакетов apt-get install mssql-server /opt/mssql/bin/mssql-conf setup скрипт начальной конфигурации (выбрать редакцию, 3 - express и русский язык 9 из 11) systemctl status mssql-server curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - установить клиент curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | tee /etc/apt/sources.list.d/msprod.list apt-get update apt-get install mssql-tools echo &#39;export PATH=&amp;quot;$PATH:/opt/mssql-tools/bin&amp;quot;&#39; &amp;gt;&amp;gt; ~/.</description>
    </item>
    <item>
      <title>MySQL</title>
      <link>https://lifailon.github.io/mysql/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/mysql/</guid>
      <description>Config apt -y install mysql-server mysql-client mysql -V systemctl status mysql mysqladmin -u root password задать пароль root&#xA;nano /etc/mysql/mysql.conf.d/mysqld.cnf&#xA;[mysqld]&#xD;user = mysql&#xD;# pid-file = /var/run/mysqld/mysqld.pid&#xD;# socket = /var/run/mysqld/mysqld.sock&#xD;# port = 3306&#xD;# datadir = /var/lib/mysql&#xD;# tmpdir = /tmp&#xD;bind-address = 0.0.0.0&#xD;mysqlx-bind-address = 0.0.0.0&#xD;log_error = /var/log/mysql/error.log&#xD;systemctl restart mysql ss -tulnp | grep 3306 ufw allow 3306/tcp nc -zv 192.168.1.253 3306 tnc 192.168.1.253 -p 3306</description>
    </item>
    <item>
      <title>Network</title>
      <link>https://lifailon.github.io/network/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/network/</guid>
      <description>Network ping Test-Connection -Count 1 $srv1, $srv2 отправить icmp-пакет двум хостам Test-Connection $srv -ErrorAction SilentlyContinue не выводить ошибок, если хост не отвечает Test-Connection -Source $srv1 -ComputerName $srv2 пинг с удаленного компьютера&#xA;function Test-PingNetwork { param ( [Parameter(Mandatory,ValueFromPipeline)][string[]]$Network, [ValidateRange(100,10000)][int]$Timeout = 100 ) $ping = New-Object System.Net.NetworkInformation.Ping $Network = $Network -replace &amp;#34;0$&amp;#34; $net = @() foreach ($r in @(1..254)) { $net += &amp;#34;$network$r&amp;#34; } foreach ($n in $net) { $ping.Send($n, $timeout) | select @{Name=&amp;#34;Address&amp;#34;; Expression={$n -replace &amp;#34;.</description>
    </item>
    <item>
      <title>Virtualization</title>
      <link>https://lifailon.github.io/virtualization/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/virtualization/</guid>
      <description>VMWare Install-Module -Name VMware.PowerCLI # -AllowClobber установить модуль (PackageProvider: nuget) Get-Module -ListAvailable VMware* | Select Name,Version Import-Module VMware.VimAutomation.Core импортировать в сессию Get-PSProvider | format-list Name,PSSnapIn,ModuleName список оснасток Windows PowerShell&#xA;Get-PowerCLIConfiguration конфигурация подключения Set-PowerCLIConfiguration -Scope AllUsers -InvalidCertificateAction ignore -confirm:$false eсли используется самоподписанный сертификат, изменить значение параметра InvalidCertificateAction с Unset на Ignore/Warn Set-PowerCLIConfiguration -Scope AllUsers -ParticipateInCeip $false отключить уведомление сбора данных через VMware Customer Experience Improvement Program (CEIP)&#xA;Read-Host –AsSecureString | ConvertFrom-SecureString | Out-File &amp;quot;$home\Documents\vcsa_password.</description>
    </item>
    <item>
      <title>WMI</title>
      <link>https://lifailon.github.io/wmi/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/wmi/</guid>
      <description>WMI/CIM (Windows Management Instrumentation/Common Information Model) Get-WmiObjec -ComputerName localhost -Namespace root -class &amp;quot;__NAMESPACE&amp;quot; | select name,__namespace отобразить дочернии Namespace (логические иерархические группы) Get-WmiObject -List отобразить все классы пространства имен &amp;ldquo;root\cimv2&amp;rdquo; (по умолчанию), свойства (описывают конфигурацию и текущее состояние управляемого ресурса) и их методы (какие действия позволяет выполнить над этим ресурсом) Get-WmiObject -List | Where-Object {$_.name -match &amp;quot;video&amp;quot;} поиск класса по имени, его свойств и методов Get-WmiObject -ComputerName localhost -Class Win32_VideoController отобразить содержимое свойств класса</description>
    </item>
    <item>
      <title>Zabbix</title>
      <link>https://lifailon.github.io/zabbix/</link>
      <pubDate>Thu, 14 Mar 2024 03:00:00 +0300</pubDate>
      <guid>https://lifailon.github.io/zabbix/</guid>
      <description>Zabbix Agent Deploy $url = &amp;#34;https://cdn.zabbix.com/zabbix/binaries/stable/6.4/6.4.5/zabbix_agent2-6.4.5-windows-amd64-static.zip&amp;#34; $path = &amp;#34;$home\Downloads\zabbix-agent2-6.4.5.zip&amp;#34; $WebClient = New-Object System.Net.WebClient $WebClient.DownloadFile($url, $path)` скачать файл Expand-Archive $path -DestinationPath &amp;#34;C:\zabbix-agent2-6.4.5\&amp;#34;` разархивировать Remove-Item $path` удалить архив New-NetFirewallRule -DisplayName &amp;#34;Zabbix-Agent&amp;#34; -Profile Any -Direction Inbound -Action Allow -Protocol TCP -LocalPort 10050,10051` открыть порты в FW $Zabbix_Server = &amp;#34;192.168.3.102&amp;#34; $conf = &amp;#34;C:\zabbix-agent2-6.4.5\conf\zabbix_agent2.conf&amp;#34; $cat = cat $conf $rep = $cat -replace &amp;#34;Server=.+&amp;#34;,&amp;#34;Server=$Zabbix_Server&amp;#34; $rep | Select-String Server= $rep &amp;gt; $conf $exe = &amp;#34;C:\zabbix-agent2-6.4.5\bin\zabbix_agent2.exe&amp;#34; .$exe --config $conf --install` установить службу Get-Service *Zabbix*Agent* | Start-Service` запустить службу #.</description>
    </item>
  </channel>
</rss>
